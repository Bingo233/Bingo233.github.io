<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pantsu&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-03-21T08:08:02.305Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Pantsu-It</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第一篇blog</title>
    <link href="http://yoursite.com/2016/03/17/Android%20%E8%87%AA%E5%AE%9A%E4%B9%89View%E2%80%94%E5%8A%A8%E6%80%81%E5%9B%BE%E6%92%AD%E6%94%BE/"/>
    <id>http://yoursite.com/2016/03/17/Android 自定义View—动态图播放/</id>
    <published>2016-03-17T06:58:57.000Z</published>
    <updated>2016-03-21T08:08:02.305Z</updated>
    
    <content type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;在《Android开发艺术探索》一书中，讲到自定义View和ViewGroup的方法，之后在 极客学院 学习了 &lt;a href=&quot;http://www.jikexueyuan.com/course/1928.html&quot; title=&quot;http://www.jikexueyuan.com/course/1928.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自定义View—实现动态图播放&lt;/a&gt; 之后，参照ImageView的源码，对自定义组件GifView进行了一下改动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加 &lt;strong&gt;scaleType&lt;/strong&gt; 属性&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;Matrix&lt;/strong&gt; 变换图像&lt;/li&gt;
&lt;li&gt;实现了播放 开始/暂停 的功能&lt;/li&gt;
&lt;li&gt;实现了对Canvas的二级缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;基础实现&quot;&gt;&lt;a href=&quot;#基础实现&quot; class=&quot;headerlink&quot; title=&quot;基础实现&quot;&gt;&lt;/a&gt;基础实现&lt;/h1&gt;&lt;p&gt;自定义View实现主要是重写 onMeasure() 和 onDraw() 两个方法:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onMeasure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDraw&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Canvas canvas)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中onMeasure()方法负责通过父级组件传入的两个参数计算得到并设置正确的宽高值，&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 自定义部件建议加入一下两行代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w = Math.max(w, getSuggestedMinimumWidth());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h = Math.max(h, getSuggestedMinimumHeight());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;widthSize = resolveSizeAndState(w, widthMeasureSpec, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;heightSize = resolveSizeAndState(w, heightMeasureSpec, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ratioWidth = (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;) widthSize / w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ratioHeight = (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;) heightSize / h;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setMeasuredDimension(widthSize, heightSize);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而onDraw方法 负责绘制自己的图像。&lt;/p&gt;
&lt;p&gt;另外有两个方法与以上两个方法分别对应：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;requestLayout()&lt;/strong&gt;方法会使组件重新调用onMeasure()方法进行‘测量’&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;invalidate()&lt;/strong&gt;方法会使组件调用onDraw()方法进行‘重绘’&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&quot;进阶实现&quot;&gt;&lt;a href=&quot;#进阶实现&quot; class=&quot;headerlink&quot; title=&quot;进阶实现&quot;&gt;&lt;/a&gt;进阶实现&lt;/h1&gt;&lt;h2 id=&quot;增加-ScaleType-属性&quot;&gt;&lt;a href=&quot;#增加-ScaleType-属性&quot; class=&quot;headerlink&quot; title=&quot;增加 ScaleType 属性&quot;&gt;&lt;/a&gt;增加 ScaleType 属性&lt;/h2&gt;&lt;p&gt;在ImageView的源码中，ScaleType作为一个内部枚举类，为ImageView提供了七种缩放类型，其中ScaleType.MATRIX最为灵活，可以通过setImageMatrix(Matrix matrix)方法设定自定义的矩阵变换。&lt;br&gt;主要思想：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先在onMeasure()方法中取得图片相对空间宽高的比例&lt;/li&gt;
&lt;li&gt;在 configureMatrix()方法中计算并获得变换矩阵mScaleMatrix&lt;/li&gt;
&lt;li&gt;在 onDraw()方法中通过 canvas.cancat(mScaleMatrix)应用矩阵变换 &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;使用Matrix变换&quot;&gt;&lt;a href=&quot;#使用Matrix变换&quot; class=&quot;headerlink&quot; title=&quot;使用Matrix变换&quot;&gt;&lt;/a&gt;使用Matrix变换&lt;/h2&gt;&lt;p&gt;最开始并没有想到用Matrix来实施变换，只是用一些canvas的简单方法：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;canvas.scale()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.translate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.skew()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.rotate()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;后来在做多重变换时就无法满足要求，参考了ImageView源码后决定采用Matrix:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;matrix.setScale()  matrix.setTranslate() matrix.setXXX()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.preScale()  matrix.preTranslate() ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.postXXX()   ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.setConcat()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.preConcat()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.postConcat()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注：&lt;/p&gt;
&lt;p&gt;Matrix的 preXXX()方法和 postXXX()方法曾经让我疑惑，例如 preScale()方法：&lt;/p&gt;
&lt;p&gt;从线代计算角度来看，matrixA.preScale(b1, b2)表示前乘一个Scale操作的矩阵MatrixB，&lt;/p&gt;
&lt;p&gt;而效果上是将 MatrixB操作至于MatrixA之前，即 MatrixA –&amp;gt; MatrixB –&amp;gt; 。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Preconcats the matrix with the specified scale.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * M&#39; = M * S(sx, sy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preScale&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; sx, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; sy)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	native_preScale(native_instance, sx, sy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;另外，MatrixA.set(MatrixB)会清空之前的矩阵序列，结果是只剩下 MatrixB –&amp;gt; 。&lt;/p&gt;
&lt;h2 id=&quot;实现-暂停播放&quot;&gt;&lt;a href=&quot;#实现-暂停播放&quot; class=&quot;headerlink&quot; title=&quot;实现 暂停播放&quot;&gt;&lt;/a&gt;实现 暂停播放&lt;/h2&gt;&lt;p&gt;解析Gif图片的基本原理就是用 &lt;strong&gt;android.graphics.Movie&lt;/strong&gt; 类加载图片文件数据流，并通过 &lt;strong&gt;mMovie.setTime(long time)&lt;/strong&gt; 设定时间点，在 &lt;strong&gt;mMovie.draw(Canvas, 0, 0)&lt;/strong&gt; 时将时间点 &lt;strong&gt;time&lt;/strong&gt; 处的图像绘制到 &lt;strong&gt;canvas&lt;/strong&gt; 上，因此，只要在暂停时保存断点 &lt;strong&gt;time&lt;/strong&gt; 并在播放时恢复断点 &lt;strong&gt;time&lt;/strong&gt;即可~&lt;/p&gt;
&lt;h2 id=&quot;Canvas-二级缓存&quot;&gt;&lt;a href=&quot;#Canvas-二级缓存&quot; class=&quot;headerlink&quot; title=&quot;Canvas 二级缓存&quot;&gt;&lt;/a&gt;Canvas 二级缓存&lt;/h2&gt;&lt;p&gt;在想到为了预览或者实现QQ滑动时暂停播放的效果，有必要实现暂停播放，而此时在onDraw(Canvas canvas)方法重绘过程中依旧会通过 mMovie 解析数据流，因此有必要实现双缓冲来对绘制实现优化：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 初始化用于缓冲的 Bitmap 和 Canvas&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cacheBitmap == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cacheBitmap = Bitmap.createBitmap(widthSize, heightSize, Bitmap.Config.ARGB_8888);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cacheCanvas = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Canvas(cacheBitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 当图像更新时，mMovie将通过cacheCanvas绘制到cacheBitmap上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mMovie.draw(cacheCanvas, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// canvas绘制cacheBitmap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.drawBitmap(cacheBitmap, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Paint());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;h2 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在使用Movie绘制时，即 &lt;strong&gt;mMovie.draw(canvas, 0, 0)&lt;/strong&gt; 时Log显示“fatal error”, 在查阅了 &lt;a href=&quot;http://stackoverflow.com/questions/29816897/android-fatal-signal-11-sigsegv-at-0x00000000-code-1-on-movie-draw&quot; title=&quot;http://stackoverflow.com/questions/29816897/android-fatal-signal-11-sigsegv-at-0x00000000-code-1-on-movie-draw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stack overflow&lt;/a&gt; 后得知，必须&lt;strong&gt;关闭硬件加速&lt;/strong&gt;才能正常运行… &amp;lt;尚未解决&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 &lt;strong&gt;onDraw(Canvas canvas)&lt;/strong&gt; 方法中调用 &lt;strong&gt;canvas.setMatrix(matrix)&lt;/strong&gt; 导致图像显示异常，之后更换代码为 &lt;strong&gt;canvas.concatMatrix(matrix)&lt;/strong&gt; 问题解决~ &lt;br&gt;&lt;br&gt;猜测: 父级容器将设定好内置Matrix的canvas传递给各个子组件让其绘制自己，而问题代码覆盖了内置Matrix Orz~&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;在《Android开发艺术探索》一书中，讲到自定义View和ViewGroup的方法，之后在 极客学院 学习了 &lt;a href=&quot;http://www.jikexueyuan.com/course/1928.html&quot; title=&quot;http://www.jikexueyuan.com/course/1928.html&quot;&gt;自定义View—实现动态图播放&lt;/a&gt; 之后，参照ImageView的源码，对自定义组件GifView进行了一下改动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加 &lt;strong&gt;scaleType&lt;/strong&gt; 属性&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;Matrix&lt;/strong&gt; 变换图像&lt;/li&gt;
&lt;li&gt;实现了播放 开始/暂停 的功能&lt;/li&gt;
&lt;li&gt;实现了对Canvas的二级缓存&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/03/16/hello-world/"/>
    <id>http://yoursite.com/2016/03/16/hello-world/</id>
    <published>2016-03-16T13:11:22.218Z</published>
    <updated>2016-03-21T05:51:15.709Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
